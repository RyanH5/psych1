// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Article should match snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Article
    source={
        Object {
            "name": "jill",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="article-container"
>
        <span
                className="link-text"
        />
        <img
                className="news-image"
                src={undefined}
        />
        <p />
        <h5
                className="article-author"
        />
        <h6
                className="article-source"
        >
                jill
        </h6>
</div>,
      "className": "single-article",
      "href": undefined,
      "target": "_blank",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="link-text"
/>,
          <img
            className="news-image"
            src={undefined}
/>,
          <p />,
          <h5
            className="article-author"
/>,
          <h6
            className="article-source"
>
            jill
</h6>,
        ],
        "className": "article-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "link-text",
          },
          "ref": null,
          "rendered": null,
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "news-image",
            "src": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": undefined,
            "className": "article-author",
          },
          "ref": null,
          "rendered": null,
          "type": "h5",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "jill",
            "className": "article-source",
          },
          "ref": null,
          "rendered": "jill",
          "type": "h6",
        },
      ],
      "type": "div",
    },
    "type": "a",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="article-container"
>
          <span
                    className="link-text"
          />
          <img
                    className="news-image"
                    src={undefined}
          />
          <p />
          <h5
                    className="article-author"
          />
          <h6
                    className="article-source"
          >
                    jill
          </h6>
</div>,
        "className": "single-article",
        "href": undefined,
        "target": "_blank",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <span
              className="link-text"
/>,
            <img
              className="news-image"
              src={undefined}
/>,
            <p />,
            <h5
              className="article-author"
/>,
            <h6
              className="article-source"
>
              jill
</h6>,
          ],
          "className": "article-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "link-text",
            },
            "ref": null,
            "rendered": null,
            "type": "span",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "news-image",
              "src": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "className": "article-author",
            },
            "ref": null,
            "rendered": null,
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "jill",
              "className": "article-source",
            },
            "ref": null,
            "rendered": "jill",
            "type": "h6",
          },
        ],
        "type": "div",
      },
      "type": "a",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
